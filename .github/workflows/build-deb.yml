# GitHub Actions APT Repository for Rofi with Wayland Support

## Research Summary

Based on proper investigation of the official rofi repository:

1. **✅ Current Status**: Official rofi now has Wayland support enabled by default, along with X11/xcb
2. **✅ Build System**: Rofi uses Meson as build system. By default rofi builds with both backends (x11 and wayland) if available on the system
3. **✅ Source**: We should use **`davatorium/rofi`** (official) not the lbonn fork which is being archived
4. **✅ Dependencies**: Complete list from official installation guide

## Method 1: GitHub Releases with Proper Build (Recommended)

### 1. Repository Structure

```
rofi-wayland-debian/
├── .github/
│   └── workflows/
│       └── build-deb.yml
├── debian/
│   ├── control
│   ├── rules
│   ├── changelog
│   └── install
└── README.md
```

### 2. Corrected GitHub Actions Workflow

Create `.github/workflows/build-deb.yml`:

```yaml
name: Build Rofi Debian Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Build weekly to catch upstream updates
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        debian_version: [bookworm, trixie, sid]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Build in Debian container
      run: |
        docker run --rm -v $PWD:/workspace -w /workspace \
          debian:${{ matrix.debian_version }} \
          /bin/bash -c "
            set -e
            
            # Update package lists
            apt-get update
            
            # Install build tools
            apt-get install -y devscripts build-essential debhelper-compat git curl wget
            
            # Install ALL required build dependencies from official docs
            apt-get install -y meson ninja-build pkg-config
            apt-get install -y flex bison check
            apt-get install -y glib-compile-resources
            
            # Core dependencies
            apt-get install -y libpango1.0-dev libpangocairo-1.0-dev
            apt-get install -y libcairo2-dev libcairo-xcb-dev
            apt-get install -y libglib2.0-dev libgdk-pixbuf-2.0-dev
            
            # X11 dependencies  
            apt-get install -y libstartup-notification0-dev
            apt-get install -y libxkbcommon-dev libxkbcommon-x11-dev
            apt-get install -y libxcb1-dev libxcb-xkb-dev libxcb-randr0-dev libxcb-xinerama0-dev
            apt-get install -y libxcb-util0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-cursor-dev
            
            # Wayland dependencies
            apt-get install -y libwayland-dev wayland-protocols
            
            # Optional but recommended
            apt-get install -y libxcb-imdkit-dev || echo 'xcb-imdkit not available, skipping'
            
            # Clone official rofi (with Wayland support merged!)
            git clone --recursive https://github.com/davatorium/rofi.git rofi-source
            cd rofi-source
            
            # Get version
            VERSION=\$(git describe --tags --always | sed 's/^v//')
            echo \"Building version: \$VERSION\"
            cd ..
            
            # Create proper source structure
            mkdir -p rofi-wayland-\${VERSION}
            cp -r rofi-source/* rofi-wayland-\${VERSION}/
            cp -r debian rofi-wayland-\${VERSION}/
            
            cd rofi-wayland-\${VERSION}
            
            # Make sure debian/rules is executable
            chmod +x debian/rules
            
            # Update changelog with proper version
            sed -i \"1s/.*/rofi-wayland (\${VERSION}-1) unstable; urgency=medium/\" debian/changelog
            
            # Test meson setup first
            echo \"Testing meson configuration...\"
            meson setup build_test
            meson configure build_test
            rm -rf build_test
            
            # Build the package
            echo \"Building Debian package...\"
            dpkg-buildpackage -us -uc -b
            
            # Move built packages
            cd ..
            mkdir -p /workspace/packages/${{ matrix.debian_version }}
            mv *.deb /workspace/packages/${{ matrix.debian_version }}/ 2>/dev/null || true
            mv *.changes /workspace/packages/${{ matrix.debian_version }}/ 2>/dev/null || true
            mv *.buildinfo /workspace/packages/${{ matrix.debian_version }}/ 2>/dev/null || true
            
            # List what was built
            echo \"Built packages:\"
            ls -la /workspace/packages/${{ matrix.debian_version }}/
        "
    
    - name: Upload packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rofi-wayland-${{ matrix.debian_version }}
        path: packages/${{ matrix.debian_version }}/*.deb
        retention-days: 30
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && matrix.debian_version == 'trixie'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: Rofi with Wayland Support - Build ${{ github.run_number }}
        body: |
          ## Rofi with Official Wayland Support
          
          Built from official davatorium/rofi repository which now includes merged Wayland support.
          
          ### Features:
          - ✅ Official Wayland support (layer shell protocol)
          - ✅ X11/XCB support (dual backend)
          - ✅ Automatic backend detection
          - ✅ All standard rofi features
          
          ### Installation:
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/build-${{ github.run_number }}/rofi-wayland_*_amd64.deb
          sudo dpkg -i rofi-wayland_*.deb
          sudo apt-get install -f  # Fix any dependencies
          ```
          
          ### Usage:
          Rofi automatically detects if you're running Wayland or X11. Force X11 with `-x11` flag.
          
          Built from commit: ${{ github.sha }}
        files: packages/**/*.deb
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

### 3. Proper Debian Package Configuration

Create `debian/control`:
```
Source: rofi-wayland
Section: x11
Priority: optional
Maintainer: Your Name <your.email@example.com>
Build-Depends: debhelper-compat (= 13),
               meson (>= 0.47.0),
               ninja-build,
               pkg-config,
               flex (>= 2.5.39),
               bison,
               check,
               glib-compile-resources,
               libpango1.0-dev (>= 1.50),
               libpangocairo-1.0-dev,
               libcairo2-dev,
               libcairo-xcb-dev,
               libglib2.0-dev (>= 2.72),
               libgdk-pixbuf-2.0-dev,
               libstartup-notification0-dev,
               libxkbcommon-dev (>= 0.4.1),
               libxkbcommon-x11-dev,
               libxcb1-dev,
               libxcb-xkb-dev,
               libxcb-randr0-dev,
               libxcb-xinerama0-dev,
               libxcb-util0-dev,
               libxcb-ewmh-dev,
               libxcb-icccm4-dev,
               libxcb-cursor-dev,
               libwayland-dev,
               wayland-protocols (>= 1.17),
               libxcb-imdkit-dev [!mipsel !mips64el !alpha !hppa !hurd-i386 !kfreebsd-amd64 !kfreebsd-i386 !m68k !powerpc !ppc64 !s390x !sh4 !sparc64 !x32]
Standards-Version: 4.6.0
Homepage: https://github.com/davatorium/rofi

Package: rofi-wayland
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Conflicts: rofi
Replaces: rofi
Provides: rofi
Description: Window switcher, application launcher and dmenu replacement
 Rofi is a window switcher, application launcher and dmenu replacement.
 It focuses on being fast to use and have minimal distraction.
 Rofi is written in C and uses X11/XCB and Wayland protocols.
 .
 Main features:
  * Fast, keyboard driven operation
  * UTF-8 enabled
  * Multiple backends: X11/XCB and Wayland
  * Customizable via themes and configuration
  * Built-in modes: run, drun, window, ssh, keys, filebrowser
  * Can act as dmenu replacement
 .
 This version includes both X11 and Wayland support with automatic backend
 detection based on the current session.
```

Create `debian/rules`:
```makefile
#!/usr/bin/make -f

%:
	dh $@ --buildsystem=meson

override_dh_auto_configure:
	dh_auto_configure -- \
		-Dwayland=enabled \
		-Dxcb=enabled

override_dh_auto_test:
	# Run tests if available, but don't fail build if tests fail
	dh_auto_test || echo "Tests failed, but continuing build"
```

Create `debian/changelog`:
```
rofi-wayland (1.7.9-1) unstable; urgency=medium

  * Initial Debian package build with official Wayland support
  * Built from davatorium/rofi with merged Wayland support
  * Includes both X11/XCB and Wayland backends
  * Automatic backend detection

 -- Your Name <your.email@example.com>  Fri, 01 Aug 2025 12:00:00 +0000
```

Create `debian/install`:
```
usr/bin/rofi usr/bin/
usr/share/man/man1/rofi.1* usr/share/man/man1/
usr/share/man/man5/rofi-theme.5* usr/share/man/man5/
usr/share/applications/rofi.desktop usr/share/applications/
usr/share/applications/rofi-theme-selector.desktop usr/share/applications/
```

## Usage Instructions

### Installation from Releases:

```bash
# Download latest release
wget https://github.com/yourusername/rofi-wayland-debian/releases/latest/download/rofi-wayland_*_amd64.deb

# Install
sudo dpkg -i rofi-wayland_*.deb
sudo apt-get install -f  # Fix any missing dependencies

# Verify installation
rofi -version
```

### Testing:

```bash
# Test in Wayland session (auto-detected)
rofi -show drun

# Force X11 backend (if available)
rofi -x11 -show drun

# Check which backend is being used
rofi -help | grep -i backend
```

## Key Improvements from Research:

1. **✅ Official Source**: Uses `davatorium/rofi` with merged Wayland support
2. **✅ Complete Dependencies**: All dependencies from official installation guide
3. **✅ Proper Meson Usage**: Correct meson setup and configuration
4. **✅ Dual Backend**: Both Wayland and X11 support with automatic detection
5. **✅ Robust Build**: Pre-flight meson test and proper error handling
6. **✅ Debian Standards**: Modern debhelper-compat, proper dependencies

## Benefits:

- **Latest Official Code** with merged Wayland support
- **Automatic backend detection** - works in both Wayland and X11
- **All features preserved** - no functionality loss
- **Professional packaging** following Debian standards
- **Weekly auto-builds** to stay current with upstream
- **Multi-version support** for different Debian releases

This approach gives you the official, fully-featured rofi with Wayland support, properly packaged and automatically maintained!
